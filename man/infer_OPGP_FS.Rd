% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OPGP.R
\name{infer_OPGP_FS}
\alias{infer_OPGP_FS}
\title{Inference of the OPGPs (or parental phase) for a single full-sub family.}
\usage{
infer_OPGP_FS(depth_Ref, depth_Alt, config, epsilon = 0.001, method = "EM",
  ...)
}
\arguments{
\item{depth_Ref}{Numeric matrix of allele counts for the reference allele.}

\item{depth_Alt}{Numeric matrix of allele counts for the alternate allele.}

\item{config}{Numeric vector of the segregation types for all the loci.}

\item{epsilon}{Numeric value of the starting value for the sequencing error
parameter. Default is NULL which means that the sequencing parameter is
fixed at zero.}

\item{method}{A character string specifying whether to use the EM algorithm
or optim to perform the optimzation.}

\item{\ldots}{Additional arguments passed to optimization procedure. See details for more information.}
}
\value{
Function returns a vector of the inferred OPGP values. These values correspond to those 
given in Table 1 of Bilton et al. (2018).
}
\description{
Infers the OPGPs for all loci of a single full-sib family.
}
\details{
The \code{depth_Ref} and \code{depth_Alt} matrices must have the rows
representing the individuals and columns representing the SNPs. The entries
of these two matrices must be a finite non-negative integer number. The
value for the \code{config} vector are 1=both-informative (ABxAB),
2=paternal-informative A (ABxAA), 3=paternal-informative B (ABxBB),
4=maternal-informative (AAxAB), 5=maternal-informative (BBxAB), 6 =
uninformative (AAxAA), 7 = uninformative (AAxBB), 8 = uninformative (BBxAA)
and 9 = uninformative (BBxBB).

The methodology used to infer the OPGP is found in the section "Inferring
OPGPs" of the manuscript by Bilton et al. (2018). Note that inference is
made on a single full-sib family at a time.

Two different optimzation procedures are available, which are the EM algorithm and optim.
To control the parameters to these procedures, addition arguments can be passed to the function.
The arguments which have an effect are dependent on the optimization procedure.
\itemize{
\item EM: Only two arguments currently have an effect. 'reltol' specifies 
the maximum difference between the likelihood value of successive iterations
before the algorithm terminates. 'maxit' specifies the maximum number of iterations
used in the algorithm
\item optim: The extra arguments are passed directly to optim. Those see what 
arguments are valid, visit the help page fro optim using '?optim'.
}

Note: There can be issues at times in finding the maximum likelihood
estimate (MLE) of the likelihood for the implementation which uses optim.
Changing the \code{ndeps} argument that is passed to \code{optim()} sometimes helps.
Alternatively, one can just use the EM approach (which is the default).
}
\examples{

## simulate full-sib family
config <- c(2,1,1,4,2,4,1,1,4,1,2,1)
F1data <- simFS(0.01, config=config, nInd=50, meanDepth=5)

## Determine the parental phase
OPGP <- infer_OPGP_FS(F1data$depth_Ref, F1data$depth_Alt, config)
# Same and the true OPGP value 
F1data$OPGP

## if there are issues with solving the likelihood (see comment in details)
## Note: Only if using optim method
OPGP <- infer_OPGP_FS(F1data$depth_Ref, F1data$depth_Alt, config, method = "optim",
                      ndeps=rep(1e-1,sum(config==1)*2+sum(config!=1)-1))

}
\references{
Bilton, T.P., Schofield, M.R., Black, M.A., ChagnÃ©, D., Wilcox,
P.L., & Dodds, K.G. (2018). Accounting for errors in low coverage high-throughput
sequencing data when constructing genetic maps using biparental outcrossed
populations. \emph{Genetics}, \emph{209}(1), 65--76. \url{http://www.genetics.org/content/209/1/65}
}
\author{
Timothy P. Bilton
}
